# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: trc-data-reader-deploy

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:

    runs-on: ubuntu-latest
    if: github.repository == 'hsorby/trc-data-reader'
    strategy:
      matrix:
        python-version: [3.9]
    permissions:
      contents: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools build wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test
      run: |
        python -m unittest discover
    - name: Create Release
      id: create_release
      uses: KaiWedekind/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ github.token }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
    - name: "Generate release changelog"
      uses: heinrichreimer/action-github-changelog-generator@v2.3
      with:
        token: ${{ github.token }}
    - name: Add changelog to release
      uses: irongut/EditRelease@v1.2.0
      with:
        token: ${{ github.token }}
        id: ${{ steps.create_release.outputs.id }}
        files: "CHANGELOG.md"
    - name: Build
      id: build
      shell: bash
      run: |
        python --version
        python -m build . --wheel
        echo "dist content:"
        ls dist/
    - name: Publish to PyPi
      env:
        name: pypi
        url: https://pypi.org/p/trc-data-reader
      uses: pypa/gh-action-pypi-publish@release/v1
